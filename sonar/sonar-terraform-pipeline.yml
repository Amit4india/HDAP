pipeline {
    agent any
    stages {
        stage ('terraform version check') {
            steps {
                sh 'terraform --version'
            }
        }
        stage('Terraform init') {
            steps {
                  withAWS(credentials: 'aws-access key-P') {
                      sh '''
                    cd sonar/Sonar_Terraform/services/Sonar_Terraform
                    terraform init
                    '''
                    }
                }
            }
        stage('Terraform validate') {
            steps {
                withAWS(credentials: 'aws-access key-P') {
                    sh '''
                    cd sonar/Sonar_Terraform/services/Sonar_Terraform
                    terraform validate
                    '''
                }
            }
        }

        stage('Terraform plan') {
            steps {
                withAWS(credentials: 'aws-access key-P') {
                    sh '''
                    cd sonar/Sonar_Terraform/services/Sonar_Terraform
                    terraform plan 
                    '''
                }
            }
        }
        stage('Terraform apply') {
            steps {
                withAWS(credentials: 'aws-access key-P') {
                    sh '''
                    cd sonar/Sonar_Terraform/services/Sonar_Terraform
                    terraform apply -auto-approve
                    '''
                    echo "Storing Dynamic_IP"
                    sh '''
                    cd sonar/Sonar_Terraform/services/Sonar_Terraform
                    chmod +x inventory.sh
                    ./inventory.sh
                    '''                    
                }
            }
        }
    }
}