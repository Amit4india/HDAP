---
- name: Create Nexus group
  group: name={{ nexus_os_group }} state=present
  become: true

- name: Create Nexus user
  user: name={{ nexus_os_user }} group={{ nexus_os_group }} shell={{ nexus_os_user_shell }} state=present
  become: true

- name: Create Nexus installation directory
  file:
    path={{ nexus_installation_dir }}
    state=directory
  become: true

  #- name: Download Nexus package
  #get_url: url="/https://download.sonatype.com/nexus/3/latest-unix.tar.gz/"
  #  become: false
- name: Download Nexus package
  get_url: url="http://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz" dest={{ nexus_download_dir }}/{{ nexus_package }}
  become: false

- name: Unpack Nexus package
  unarchive:
    src={{ nexus_download_dir }}/{{ nexus_package }}
    dest={{ nexus_installation_dir }}
    creates={{ nexus_installation_dir }}/nexus-{{ nexus_version }}
    force=no
    copy=false
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode=0755

#- name: Create symlink nexus-latest
#  file:
#    src={{ nexus_installation_dir }}/nexus-{{ nexus_version }}
#    dest={{ nexus_installation_dir }}/nexus-latest
#    owner={{ nexus_os_user }}
#    group={{ nexus_os_group }}
#    state=link

- name: Check if sonatype working directory exists
  stat: path={{ nexus_installation_dir }}/sonatype-work
  register: s_w

#- name: Move existing sonatype working directory into specified working dir
#  command: mv {{ nexus_installation_dir }}/sonatype-work {{ nexus_working_dir }}
#  when: s_w.stat.exists


- name: Set permissions and ownership on Nexus installation directory
  file:
    path={{ nexus_installation_dir }}/{{ nexus_package }}
    state=directory
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode=0755
    recurse=true

- name: Create Nexus directory for PID file
  file:
    path=/var/run/nexus
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    state=directory

    #- name: Configure port in nexus.properties
    #lineinfile:
    #dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    #line=application-port={{ nexus_port }}
    #regexp=application-port=.*
    #state=present

    #- name: Configure workdir in nexus.properties
    # lineinfile:
    #dest={{ nexus_installation_dir }}/nexus-{{ nexus_version }}/conf/nexus.properties
    # line=nexus-work={{ nexus_working_dir }}
    #regexp=nexus-work=.*
    #state=present

- name: Copy the /etc/init.d/nexus file
  template: src=init-nexus.j2 dest=/etc/init.d/nexus owner=root group=root mode=0755 backup=yes

- name: Update services
  shell: >
     systemctl daemon-reload

- name: restart nexus
  shell: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}/bin/nexus start"

  #- name: Wait for Nexus to start up.
  #shell: "curl -D - --silent --max-time 5 http://{{ host_ip }}:{{ nexus_port }}/nexus/"
  #register: result
  #until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  #retries: 5
  #delay: 30
  #changed_when: false